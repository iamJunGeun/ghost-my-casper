{"version":3,"sources":["jquery.fitvids.js","gallery-card.js","infinite-scroll.js","prism.js","sticky-nav-title.js"],"names":["$","fn","fitVids","options","head","div","settings","customSelector","ignore","document","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","addEventListener","querySelectorAll","forEach","image","container","closest","ratio","attributes","value","style","flex","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","status","removeEventListener","onScroll","onResize","response","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive","_self","WorkerGlobalScope","self","Prism","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","clone","deepClone","visited","id","key","hasOwnProperty","v","i","getLanguage","element","test","className","parentElement","match","currentScript","Error","err","src","exec","stack","scripts","isActive","defaultActivation","no","classList","contains","languages","redef","insertBefore","inside","before","insert","root","token","grammar","ret","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","env","selector","hooks","run","elements","apply","highlightElement","language","nodeName","code","textContent","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","matchGrammar","startNode","startPos","rematch","patterns","j","cause","flags","patternObj","lookbehind","greedy","pattern","global","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","from","index","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","list","array","node","toArray","all","add","name","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","count","s","e","tag","classes","aliases","message","parse","close","readyState","script","highlightAutomaticallyCallback","hasAttribute","defer","setTimeout","module","exports","markup","comment","prolog","doctype","internal-subset","string","punctuation","doctype-tag","cdata","namespace","attr-value","attr-name","entity","includedCdataInside","included-cdata","def","html","mathml","svg","xml","ssml","atom","rss","clike","class-name","keyword","boolean","function","number","operator","quoted","interpreted","variable","asciidoc","comment-block","table","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","title","attribute-entry","hr","page-break","admonition","callout","macro","inline","url","attribute-ref","italic","bold","replacement","line-continuation","copyFromAsciiDoc","keys","l","split","adoc","envVars","commandAfterHeredoc","insideString","bash","environment","shebang","function-name","for-or-select","assign-left","builtin","file-descriptor","toBeCopied","shell","parameter","batch","label","command","c","macro-name","directive","directive-hash","expression","constant","cpp","raw-string","base-clause","cmake","interpolation","inserted","diff","coord","PREFIXES","deleted-sign","deleted-arrow","inserted-sign","inserted-arrow","unchanged","prefix","line","git","deleted","commit-sha1","entry","regex","gitignore","hgignore","npmignore","makefile","symbol","python","string-interpolation","format-spec","conversion-option","triple-quoted-string","decorator","py","tcl","scope","isLineHeightRounded","res","scrollIntoView","fakeTimer","$$","hasClass","indexOf","callFunction","func","highlightLines","pre","lines","ranges","getAttribute","filter","Boolean","offset","lineHeight","parseFloat","getComputedStyle","hasLineNumbers","codeElement","mutateActions","codePreOffset","child","parentStyle","childStyle","offsetTop","pxToNumber","borderTopWidth","paddingTop","px","substr","currentRange","top","range","start","end","setAttribute","lineNumbers","getLine","endNode","offsetHeight","String","linkableLineNumbersClass","linkableLineNumbers","trim","lineSpan","lineNumber","onclick","hash","location","applyHash","parentNode","removeChild","lastIndexOf","mutateDom","d","fontSize","padding","border","body","num","completeHook","clearTimeout","isLineNumbersLoaded","PLUGIN_NAME","NEW_LINE_EXP","config","getStyles","lastWidth","resizeElements","whiteSpace","infos","lineNumbersWrapper","lineNumberSizer","codeLines","display","oneLinerHeight","getBoundingClientRect","lineHeights","sizer","info","undefined","childIndex","children","wrapper","lineNumberRows","lineNumberStart","lineNumberEnd","lineIndex","resize","assumeViewportIndependence","currentStyle","innerWidth","remove","linesNum","counterReset","noop","registerButton","hook","toolbar","opts","onClick","console","warn","elementCallbacks","order","getOrder","template","Languages","none","js","abap","abnf","al","antlr4","g4","apacheconf","apl","aql","arff","aspnet","asm6502","autohotkey","autoit","basic","bbcode","bnf","rbnf","bsl","oscript","csharp","cs","dotnet","cil","coffee","conc","csp","css-extras","dataweave","dax","django","jinja2","dns-zone-file","dns-zone","dockerfile","dot","gv","ebnf","editorconfig","ejs","etlua","erb","excel-formula","xlsx","xls","fsharp","firestore-security-rules","ftl","gml","gamemakerlanguage","gcode","gdscript","gedcom","glsl","graphql","hs","hcl","hlsl","http","hpkp","hsts","ichigojam","inform7","javadoc","javadoclike","javastacktrace","jq","jsdoc","js-extras","json","webmanifest","json5","jsonp","jsstacktrace","js-templates","kts","kt","latex","tex","context","lilypond","ly","emacs","elisp","emacs-lisp","llvm","lolcode","md","markup-templating","matlab","mel","mongodb","moon","n1ql","n4js","n4jsd","nand2tetris-hdl","naniscript","nani","nasm","neon","nginx","nsis","objectivec","objc","ocaml","opencl","parigp","objectpascal","pcaxis","peoplecode","pcode","php","phpdoc","php-extras","plsql","powerquery","pq","mscript","powershell","promql","properties","protobuf","purebasic","pbfasm","purs","q","qml","rkt","jsx","tsx","renpy","rpy","robotframework","robot","rb","sas","sass","scss","shell-session","sh-session","shellsession","sml","smlnj","solidity","sol","solution-file","sln","soy","sparql","rq","splunk-spl","sqf","sql","iecst","t4-templating","t4-cs","t4","t4-vb","tap","tt2","toml","trig","ts","tsconfig","uscript","uc","vbnet","vhdl","vim","visual-basic","vba","vb","wasm","wiki","xeoracube","xml-doc","xojo","xquery","yaml","yml","yang","substring","toUpperCase","ClipboardJS","require","onload","pop","linkCopy","registerClipboard","clip","on","resetText","Casper","stickyNavTitle","nav","navSelector","titleSelector","update","activeClass"],"mappings":"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","file":"casper.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n","/* PrismJS 1.23.0\nhttps://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+clike+asciidoc+bash+batch+c+cpp+cmake+diff+git+ignore+makefile+python+tcl&plugins=line-highlight+line-numbers+show-language+toolbar+copy-to-clipboard */\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n;\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n(function (Prism) {\n\n\tvar attributes = {\n\t\tpattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'quoted': {\n\t\t\t\tpattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^[$`]|[$`]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'interpreted': {\n\t\t\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^'|'$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\t'variable': /\\w+(?==)/,\n\t\t\t'punctuation': /^\\[|\\]$|,/,\n\t\t\t'operator': /=/,\n\t\t\t// The negative look-ahead prevents blank matches\n\t\t\t'attr-value': /(?!^\\s+$).+/\n\t\t}\n\t};\n\n\tvar asciidoc = Prism.languages.asciidoc = {\n\t\t'comment-block': {\n\t\t\tpattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n\t\t\tinside: {\n\t\t\t\t'specifiers': {\n\t\t\t\t\tpattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n\t\t\t\t\talias: 'attr-value'\n\t\t\t\t},\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /(^|[^\\\\])[|!]=*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\n\t\t'passthrough-block': {\n\t\t\tpattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\++|\\++$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// Literal blocks and listing blocks\n\t\t'literal-block': {\n\t\t\tpattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// Sidebar blocks, quote blocks, example blocks and open blocks\n\t\t'other-block': {\n\t\t\tpattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\n\t\t// list-punctuation and list-label must appear before indented-block\n\t\t'list-punctuation': {\n\t\t\tpattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list-label': {\n\t\t\tpattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'indented-block': {\n\t\t\tpattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'comment': /^\\/\\/.*/m,\n\t\t'title': {\n\t\t\tpattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'attribute-entry': {\n\t\t\tpattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n\t\t\talias: 'tag'\n\t\t},\n\t\t'attributes': attributes,\n\t\t'hr': {\n\t\t\tpattern: /^'{3,}$/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'page-break': {\n\t\t\tpattern: /^<{3,}$/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'admonition': {\n\t\t\tpattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'callout': [\n\t\t\t{\n\t\t\t\tpattern: /(^[ \\t]*)<?\\d*>/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'symbol'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /<\\d+>/,\n\t\t\t\talias: 'symbol'\n\t\t\t}\n\t\t],\n\t\t'macro': {\n\t\t\tpattern: /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\tinside: {\n\t\t\t\t'function': /^[a-z\\d-]+(?=:)/,\n\t\t\t\t'punctuation': /^::?/,\n\t\t\t\t'attributes': {\n\t\t\t\t\tpattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\t\t\tinside: attributes.inside\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'inline': {\n\t\t\t/*\n\t\t\tThe initial look-behind prevents the highlighting of escaped quoted text.\n\n\t\t\tQuoted text can be multi-line but cannot span an empty line.\n\t\t\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n\n\t\t\tFirst, we handle the constrained quotes.\n\t\t\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n\t\t\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n\n\t\t\tThen we handle the unconstrained quotes.\n\t\t\tThose do not have the restrictions of the constrained quotes.\n\t\t\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n\t\t\t */\n\t\t\tpattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': attributes,\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attribute-ref': {\n\t\t\t\t\tpattern: /^\\{.+\\}$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'variable': {\n\t\t\t\t\t\t\tpattern: /(^\\{)[a-z\\d,+_-]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'operator': /^[=?!#%@$]|!(?=[:}])/,\n\t\t\t\t\t\t'punctuation': /^\\{|\\}$|::?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'italic': {\n\t\t\t\t\tpattern: /^(['_])[\\s\\S]+\\1$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bold': {\n\t\t\t\t\tpattern: /^\\*[\\s\\S]+\\*$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tpunctuation: /^\\*\\*?|\\*\\*?$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n\t\t\t}\n\t\t},\n\t\t'replacement': {\n\t\t\tpattern: /\\((?:C|TM|R)\\)/,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i,\n\t\t'line-continuation': {\n\t\t\tpattern: /(^| )\\+$/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t}\n\t};\n\n\n\t// Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n\tfunction copyFromAsciiDoc(keys) {\n\t\tkeys = keys.split(' ');\n\n\t\tvar o = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\to[keys[i]] = asciidoc[keys[i]];\n\t\t}\n\t\treturn o;\n\t}\n\n\tattributes.inside['interpreted'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\tasciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro');\n\n\tasciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout');\n\n\tasciidoc['table'].inside.rest = copyFromAsciiDoc('comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation');\n\n\tasciidoc['other-block'].inside.rest = copyFromAsciiDoc('table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation');\n\n\tasciidoc['title'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\n\tPrism.languages.adoc = Prism.languages.asciidoc;\n}(Prism));\n\n(function(Prism) {\n\t// $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n\t// + LC_ALL, RANDOM, REPLY, SECONDS.\n\t// + make sure PS1..4 are here as they are not always set,\n\t// - some useless things.\n\tvar envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n\n\tvar commandAfterHeredoc = {\n\t\tpattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n\t\tlookbehind: true,\n\t\talias: 'punctuation', // this looks reasonably well in all themes\n\t\tinside: null // see below\n\t};\n\n\tvar insideString = {\n\t\t'bash': commandAfterHeredoc,\n\t\t'environment': {\n\t\t\tpattern: RegExp(\"\\\\$\" + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': [\n\t\t\t// [0]: Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t],\n\t\t\t\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\t'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\t'punctuation': /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [1]: Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [2]: Brace expansion\n\t\t\t{\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t'environment': {\n\t\t\t\t\t\tpattern: RegExp(\"(\\\\{)\" + envVars),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:\\w+|[#?*!@$])/\n\t\t],\n\t\t// Escape sequences from echo and printf's manuals, and escaped quotes.\n\t\t'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/.*/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function-name': [\n\t\t\t// a) function foo {\n\t\t\t// b) foo() {\n\t\t\t// c) function foo() {\n\t\t\t// but not “foo {”\n\t\t\t{\n\t\t\t\t// a) and c)\n\t\t\t\tpattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// b)\n\t\t\t\tpattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n\t\t\t\talias: 'function'\n\t\t\t}\n\t\t],\n\t\t// Highlight variable names as variables in for and select beginnings.\n\t\t'for-or-select': {\n\t\t\tpattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight variable names as variables in the left-hand part\n\t\t// of assignments (“=” and “+=”).\n\t\t'assign-left': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n\t\t\tinside: {\n\t\t\t\t'environment': {\n\t\t\t\t\tpattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'constant'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t// Here-document with quotes around the tag\n\t\t\t// → No expansion (so no “inside”).\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'bash': commandAfterHeredoc\n\t\t\t\t}\n\t\t\t},\n\t\t\t// “Normal” string\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\2)[^\\\\`$])*\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t}\n\t\t],\n\t\t'environment': {\n\t\t\tpattern: RegExp(\"\\\\$?\" + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': insideString.variable,\n\t\t'function': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t\t'builtin': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true,\n\t\t\t// Alias added to make those easier to distinguish from strings.\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'file-descriptor': {\n\t\t\tpattern: /\\B&\\d\\b/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'operator': {\n\t\t\t// Lots of redirections here, but not just that.\n\t\t\tpattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n\t\t\tinside: {\n\t\t\t\t'file-descriptor': {\n\t\t\t\t\tpattern: /^\\d/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n\t\t'number': {\n\t\t\tpattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tcommandAfterHeredoc.inside = Prism.languages.bash;\n\n\t/* Patterns in command substitution. */\n\tvar toBeCopied = [\n\t\t'comment',\n\t\t'function-name',\n\t\t'for-or-select',\n\t\t'assign-left',\n\t\t'string',\n\t\t'environment',\n\t\t'function',\n\t\t'keyword',\n\t\t'builtin',\n\t\t'boolean',\n\t\t'file-descriptor',\n\t\t'operator',\n\t\t'punctuation',\n\t\t'number'\n\t];\n\tvar inside = insideString.variable[1].inside;\n\tfor(var i = 0; i < toBeCopied.length; i++) {\n\t\tinside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n\t}\n\n\tPrism.languages.shell = Prism.languages.bash;\n})(Prism);\n\n(function (Prism) {\n\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;\n\tvar parameter = {\n\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n\t\talias: 'attr-name',\n\t\tinside: {\n\t\t\t'punctuation': /:/\n\t\t}\n\t};\n\tvar string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n\tvar number = /(?:\\b|-)\\d+\\b/;\n\n\tPrism.languages.batch = {\n\t\t'comment': [\n\t\t\t/^::.*/m,\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'label': {\n\t\t\tpattern: /^:.*/m,\n\t\t\talias: 'property'\n\t\t},\n\t\t'command': [\n\t\t\t{\n\t\t\t\t// FOR command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// IF command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ELSE command\n\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^else\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// SET command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^set\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\tvariable,\n\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n\t\t\t\t\t],\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Other commands\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^\\w+\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'label': {\n\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'operator': /[&@]/,\n\t\t'punctuation': /[()']/\n\t};\n}(Prism));\n\nPrism.languages.c = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n\t'function': /[a-z_]\\w*(?=\\s*\\()/i,\n\t'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t\tpattern: /^(#\\s*include\\s*)<[^>]+>/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tPrism.languages.c['string']\n\t\t\t],\n\t\t\t'comment': Prism.languages.c['comment'],\n\t\t\t'macro-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function'\n\t\t\t\t}\n\t\t\t],\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /^(#\\s*)[a-z]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'directive-hash': /^#/,\n\t\t\t'punctuation': /##|\\\\(?=[\\r\\n])/,\n\t\t\t'expression': {\n\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\tinside: Prism.languages.c\n\t\t\t}\n\t\t}\n\t},\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\n\ndelete Prism.languages.c['boolean'];\n\n(function (Prism) {\n\n\tvar keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n\n\tPrism.languages.cpp = Prism.languages.extend('c', {\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source\n\t\t\t\t\t.replace(/<keyword>/g, function () { return keyword.source; })),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// This is intended to capture the class name of method implementations like:\n\t\t\t//   void foo::bar() const {}\n\t\t\t// However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n\t\t\t// it starts with an uppercase letter. This approximation should give decent results.\n\t\t\t/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n\t\t\t// This will capture the class name before destructors like:\n\t\t\t//   Foo::~Foo() {}\n\t\t\t/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n\t\t\t// This also intends to capture the class name of method implementations but here the class has template\n\t\t\t// parameters, so it can't be a namespace (until C++ adds generic namespaces).\n\t\t\t/\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n\t\t],\n\t\t'keyword': keyword,\n\t\t'number': {\n\t\t\tpattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'string', {\n\t\t'raw-string': {\n\t\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\t\talias: 'string',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'class-name', {\n\t\t// the base clause is an optional list of parent classes\n\t\t// https://en.cppreference.com/w/cpp/language/class\n\t\t'base-clause': {\n\t\t\tpattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: Prism.languages.extend('cpp', {})\n\t\t}\n\t});\n\tPrism.languages.insertBefore('inside', 'operator', {\n\t\t// All untokenized words that are not namespaces should be class names\n\t\t'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n\t}, Prism.languages.cpp['base-clause']);\n\n}(Prism));\n\nPrism.languages.cmake = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${(?:[^{}$]|\\${[^{}$]*})*}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\${|}/,\n\t\t\t\t\t'variable': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'variable': /\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:CTEST_CUSTOM_(?:MAXIMUM_(?:(?:FAIL|PASS)ED_TEST_OUTPUT_SIZE|NUMBER_OF_(?:ERROR|WARNING)S)|ERROR_(?:P(?:OST|RE)_CONTEXT|EXCEPTION|MATCH)|P(?:OST|RE)_MEMCHECK|WARNING_(?:EXCEPTION|MATCH)|(?:MEMCHECK|TESTS)_IGNORE|P(?:OST|RE)_TEST|COVERAGE_EXCLUDE)|ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n\t'property': /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ARCHIVE_OUTPUT_NAME|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEBUG_POSTFIX|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n\t'keyword': /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n\t'boolean': /\\b(?:ON|OFF|TRUE|FALSE)\\b/,\n\t'namespace': /\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,\n\t'operator': /\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,\n\t'inserted': {\n\t\tpattern: /\\b\\w+::\\w+\\b/,\n\t\talias: 'class-name'\n\t},\n\t'number': /\\b\\d+(?:\\.\\d+)*\\b/,\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n\t'punctuation': /[()>}]|\\$[<{]/\n};\n\n(function (Prism) {\n\n\tPrism.languages.diff = {\n\t\t'coord': [\n\t\t\t// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n\t\t\t/^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n\t\t\t// Match \"@@ ... @@\" coord lines in unified diff.\n\t\t\t/^@@.*@@$/m,\n\t\t\t// Match coord lines in normal diff (starts with a number).\n\t\t\t/^\\d.*$/m\n\t\t]\n\n\t\t// deleted, inserted, unchanged, diff\n\t};\n\n\t/**\n\t * A map from the name of a block to its line prefix.\n\t *\n\t * @type {Object<string, string>}\n\t */\n\tvar PREFIXES = {\n\t\t'deleted-sign': '-',\n\t\t'deleted-arrow': '<',\n\t\t'inserted-sign': '+',\n\t\t'inserted-arrow': '>',\n\t\t'unchanged': ' ',\n\t\t'diff': '!',\n\t};\n\n\t// add a token for each prefix\n\tObject.keys(PREFIXES).forEach(function (name) {\n\t\tvar prefix = PREFIXES[name];\n\n\t\tvar alias = [];\n\t\tif (!/^\\w+$/.test(name)) { // \"deleted-sign\" -> \"deleted\"\n\t\t\talias.push(/\\w+/.exec(name)[0]);\n\t\t}\n\t\tif (name === \"diff\") {\n\t\t\talias.push(\"bold\");\n\t\t}\n\n\t\tPrism.languages.diff[name] = {\n\t\t\tpattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n\t\t\talias: alias,\n\t\t\tinside: {\n\t\t\t\t'line': {\n\t\t\t\t\tpattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'prefix': {\n\t\t\t\t\tpattern: /[\\s\\S]/,\n\t\t\t\t\talias: /\\w+/.exec(name)[0]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t});\n\n\t// make prefixes available to Diff plugin\n\tObject.defineProperty(Prism.languages.diff, 'PREFIXES', {\n\t\tvalue: PREFIXES\n\t});\n\n}(Prism));\n\nPrism.languages.git = {\n\t/*\n\t * A simple one line comment like in a git status command\n\t * For instance:\n\t * $ git status\n\t * # On branch infinite-scroll\n\t * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n\t * # and have 1 and 2 different commits each, respectively.\n\t * nothing to commit (working directory clean)\n\t */\n\t'comment': /^#.*/m,\n\n\t/*\n\t * Regexp to match the changed lines in a git diff output. Check the example below.\n\t */\n\t'deleted': /^[-–].*/m,\n\t'inserted': /^\\+.*/m,\n\n\t/*\n\t * a string (double and simple quote)\n\t */\n\t'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n\t/*\n\t * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n\t * For instance:\n\t * $ git add file.txt\n\t */\n\t'command': {\n\t\tpattern: /^.*\\$ git .*$/m,\n\t\tinside: {\n\t\t\t/*\n\t\t\t * A git command can contain a parameter starting by a single or a double dash followed by a string\n\t\t\t * For instance:\n\t\t\t * $ git diff --cached\n\t\t\t * $ git log -p\n\t\t\t */\n\t\t\t'parameter': /\\s--?\\w+/m\n\t\t}\n\t},\n\n\t/*\n\t * Coordinates displayed in a git diff command\n\t * For instance:\n\t * $ git diff\n\t * diff --git file.txt file.txt\n\t * index 6214953..1d54a52 100644\n\t * --- file.txt\n\t * +++ file.txt\n\t * @@ -1 +1,2 @@\n\t * -Here's my tetx file\n\t * +Here's my text file\n\t * +And this is the second line\n\t */\n\t'coord': /^@@.*@@$/m,\n\n\t/*\n\t * Match a \"commit [SHA1]\" line in a git log output.\n\t * For instance:\n\t * $ git log\n\t * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n\t * Author: lgiraudel\n\t * Date:   Mon Feb 17 11:18:34 2014 +0100\n\t *\n\t *     Add of a new line\n\t */\n\t'commit-sha1': /^commit \\w{40}$/m\n};\n\n(function (Prism) {\n\tPrism.languages.ignore = {\n\t\t// https://git-scm.com/docs/gitignore\n\t\t'comment': /^#.*/m,\n\t\t'entry': {\n\t\t\tpattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'operator': /^!|\\*\\*?|\\?/,\n\t\t\t\t'regex': {\n\t\t\t\t\tpattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\//\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.languages.gitignore = Prism.languages.ignore\n\tPrism.languages.hgignore = Prism.languages.ignore\n\tPrism.languages.npmignore = Prism.languages.ignore\n\n}(Prism));\n\nPrism.languages.makefile = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\n\t// Built-in target names\n\t'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n\n\t// Targets\n\t'symbol': {\n\t\tpattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n\t\tinside: {\n\t\t\t'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n\t\t}\n\t},\n\t'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n\t'keyword': [\n\t\t// Directives\n\t\t/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n\t\t// Functions\n\t\t{\n\t\t\tpattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'operator': /(?:::|[?:+!])?=|[|@]/,\n\t'punctuation': /[:;(){}]/\n};\n\nPrism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:True|False|None)\\b/,\n\t'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n\nPrism.languages.tcl = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n\t\tgreedy: true\n\t},\n\t'variable': [\n\t\t{\n\t\t\tpattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\$){[^}]+}/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'function': {\n\t\tpattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n\t\tlookbehind: true\n\t},\n\t'builtin': [\n\t\t{\n\t\t\tpattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/\\b(?:elseif|else)\\b/\n\t],\n\t'scope': {\n\t\tpattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n\t\tlookbehind: true,\n\t\talias: 'constant'\n\t},\n\t'keyword': {\n\t\tpattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n\t\tlookbehind: true\n\t},\n\t'operator': /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n\t'punctuation': /[{}()\\[\\]]/\n};\n\n(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {string} selector\n\t * @param {ParentNode} [container]\n\t * @returns {HTMLElement[]}\n\t */\n\tfunction $$(selector, container) {\n\t\treturn Array.prototype.slice.call((container || document).querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Returns whether the given element has the given class.\n\t *\n\t * @param {Element} element\n\t * @param {string} className\n\t * @returns {boolean}\n\t */\n\tfunction hasClass(element, className) {\n\t\tclassName = \" \" + className + \" \";\n\t\treturn (\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(className) > -1\n\t}\n\n\t/**\n\t * Calls the given function.\n\t *\n\t * @param {() => any} func\n\t * @returns {void}\n\t */\n\tfunction callFunction(func) {\n\t\tfunc();\n\t}\n\n\t// Some browsers round the line-height, others don't.\n\t// We need to test for it to position the elements properly.\n\tvar isLineHeightRounded = (function () {\n\t\tvar res;\n\t\treturn function () {\n\t\t\tif (typeof res === 'undefined') {\n\t\t\t\tvar d = document.createElement('div');\n\t\t\t\td.style.fontSize = '13px';\n\t\t\t\td.style.lineHeight = '1.5';\n\t\t\t\td.style.padding = '0';\n\t\t\t\td.style.border = '0';\n\t\t\t\td.innerHTML = '&nbsp;<br />&nbsp;';\n\t\t\t\tdocument.body.appendChild(d);\n\t\t\t\t// Browsers that round the line-height should have offsetHeight === 38\n\t\t\t\t// The others should have 39.\n\t\t\t\tres = d.offsetHeight === 38;\n\t\t\t\tdocument.body.removeChild(d);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}());\n\n\t/**\n\t * Returns the top offset of the content box of the given parent and the content box of one of its children.\n\t *\n\t * @param {HTMLElement} parent\n\t * @param {HTMLElement} child\n\t */\n\tfunction getContentBoxTopOffset(parent, child) {\n\t\tvar parentStyle = getComputedStyle(parent);\n\t\tvar childStyle = getComputedStyle(child);\n\n\t\t/**\n\t\t * Returns the numeric value of the given pixel value.\n\t\t *\n\t\t * @param {string} px\n\t\t */\n\t\tfunction pxToNumber(px) {\n\t\t\treturn +px.substr(0, px.length - 2);\n\t\t}\n\n\t\treturn child.offsetTop\n\t\t\t+ pxToNumber(childStyle.borderTopWidth)\n\t\t\t+ pxToNumber(childStyle.paddingTop)\n\t\t\t- pxToNumber(parentStyle.paddingTop);\n\t}\n\n\t/**\n\t * Highlights the lines of the given pre.\n\t *\n\t * This function is split into a DOM measuring and mutate phase to improve performance.\n\t * The returned function mutates the DOM when called.\n\t *\n\t * @param {HTMLElement} pre\n\t * @param {string | null} [lines]\n\t * @param {string} [classes='']\n\t * @returns {() => void}\n\t */\n\tfunction highlightLines(pre, lines, classes) {\n\t\tlines = typeof lines === 'string' ? lines : pre.getAttribute('data-line');\n\n\t\tvar ranges = lines.replace(/\\s+/g, '').split(',').filter(Boolean);\n\t\tvar offset = +pre.getAttribute('data-line-offset') || 0;\n\n\t\tvar parseMethod = isLineHeightRounded() ? parseInt : parseFloat;\n\t\tvar lineHeight = parseMethod(getComputedStyle(pre).lineHeight);\n\t\tvar hasLineNumbers = hasClass(pre, 'line-numbers');\n\t\tvar codeElement = pre.querySelector('code');\n\t\tvar parentElement = hasLineNumbers ? pre : codeElement || pre;\n\t\tvar mutateActions = /** @type {(() => void)[]} */ ([]);\n\n\t\t/**\n\t\t * The top offset between the content box of the <code> element and the content box of the parent element of\n\t\t * the line highlight element (either `<pre>` or `<code>`).\n\t\t *\n\t\t * This offset might not be zero for some themes where the <code> element has a top margin. Some plugins\n\t\t * (or users) might also add element above the <code> element. Because the line highlight is aligned relative\n\t\t * to the <pre> element, we have to take this into account.\n\t\t *\n\t\t * This offset will be 0 if the parent element of the line highlight element is the `<code>` element.\n\t\t */\n\t\tvar codePreOffset = !codeElement || parentElement == codeElement ? 0 : getContentBoxTopOffset(pre, codeElement);\n\n\t\tranges.forEach(function (currentRange) {\n\t\t\tvar range = currentRange.split('-');\n\n\t\t\tvar start = +range[0];\n\t\t\tvar end = +range[1] || start;\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar line = pre.querySelector('.line-highlight[data-range=\"' + currentRange + '\"]') || document.createElement('div');\n\n\t\t\tmutateActions.push(function () {\n\t\t\t\tline.setAttribute('aria-hidden', 'true');\n\t\t\t\tline.setAttribute('data-range', currentRange);\n\t\t\t\tline.className = (classes || '') + ' line-highlight';\n\t\t\t});\n\n\t\t\t// if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\n\t\t\tif (hasLineNumbers && Prism.plugins.lineNumbers) {\n\t\t\t\tvar startNode = Prism.plugins.lineNumbers.getLine(pre, start);\n\t\t\t\tvar endNode = Prism.plugins.lineNumbers.getLine(pre, end);\n\n\t\t\t\tif (startNode) {\n\t\t\t\t\tvar top = startNode.offsetTop + codePreOffset + 'px';\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tline.style.top = top;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (endNode) {\n\t\t\t\t\tvar height = (endNode.offsetTop - startNode.offsetTop) + endNode.offsetHeight + 'px';\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tline.style.height = height;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\tline.setAttribute('data-start', String(start));\n\n\t\t\t\t\tif (end > start) {\n\t\t\t\t\t\tline.setAttribute('data-end', String(end));\n\t\t\t\t\t}\n\n\t\t\t\t\tline.style.top = (start - offset - 1) * lineHeight + codePreOffset + 'px';\n\n\t\t\t\t\tline.textContent = new Array(end - start + 2).join(' \\n');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmutateActions.push(function () {\n\t\t\t\t// allow this to play nicely with the line-numbers plugin\n\t\t\t\t// need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\n\t\t\t\tparentElement.appendChild(line);\n\t\t\t});\n\t\t});\n\n\t\tvar id = pre.id;\n\t\tif (hasLineNumbers && id) {\n\t\t\t// This implements linkable line numbers. Linkable line numbers use Line Highlight to create a link to a\n\t\t\t// specific line. For this to work, the pre element has to:\n\t\t\t//  1) have line numbers,\n\t\t\t//  2) have the `linkable-line-numbers` class or an ascendant that has that class, and\n\t\t\t//  3) have an id.\n\n\t\t\tvar linkableLineNumbersClass = 'linkable-line-numbers';\n\t\t\tvar linkableLineNumbers = false;\n\t\t\tvar node = pre;\n\t\t\twhile (node) {\n\t\t\t\tif (hasClass(node, linkableLineNumbersClass)) {\n\t\t\t\t\tlinkableLineNumbers = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnode = node.parentElement;\n\t\t\t}\n\n\t\t\tif (linkableLineNumbers) {\n\t\t\t\tif (!hasClass(pre, linkableLineNumbersClass)) {\n\t\t\t\t\t// add class to pre\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tpre.className = (pre.className + ' ' + linkableLineNumbersClass).trim();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar start = parseInt(pre.getAttribute('data-start') || '1');\n\n\t\t\t\t// iterate all line number spans\n\t\t\t\t$$('.line-numbers-rows > span', pre).forEach(function (lineSpan, i) {\n\t\t\t\t\tvar lineNumber = i + start;\n\t\t\t\t\tlineSpan.onclick = function () {\n\t\t\t\t\t\tvar hash = id + '.' + lineNumber;\n\n\t\t\t\t\t\t// this will prevent scrolling since the span is obviously in view\n\t\t\t\t\t\tscrollIntoView = false;\n\t\t\t\t\t\tlocation.hash = hash;\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tscrollIntoView = true;\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn function () {\n\t\t\tmutateActions.forEach(callFunction);\n\t\t};\n\t}\n\n\tvar scrollIntoView = true;\n\tfunction applyHash() {\n\t\tvar hash = location.hash.slice(1);\n\n\t\t// Remove pre-existing temporary lines\n\t\t$$('.temporary.line-highlight').forEach(function (line) {\n\t\t\tline.parentNode.removeChild(line);\n\t\t});\n\n\t\tvar range = (hash.match(/\\.([\\d,-]+)$/) || [, ''])[1];\n\n\t\tif (!range || document.getElementById(hash)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar id = hash.slice(0, hash.lastIndexOf('.')),\n\t\t\tpre = document.getElementById(id);\n\n\t\tif (!pre) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-line')) {\n\t\t\tpre.setAttribute('data-line', '');\n\t\t}\n\n\t\tvar mutateDom = highlightLines(pre, range, 'temporary ');\n\t\tmutateDom();\n\n\t\tif (scrollIntoView) {\n\t\t\tdocument.querySelector('.temporary.line-highlight').scrollIntoView();\n\t\t}\n\t}\n\n\tvar fakeTimer = 0; // Hack to limit the number of times applyHash() runs\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = env.element.parentElement;\n\t\tvar lines = pre && pre.getAttribute('data-line');\n\n\t\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * Cleanup for other plugins (e.g. autoloader).\n\t\t *\n\t\t * Sometimes <code> blocks are highlighted multiple times. It is necessary\n\t\t * to cleanup any left-over tags, because the whitespace inside of the <div>\n\t\t * tags change the content of the <code> tag.\n\t\t */\n\t\tvar num = 0;\n\t\t$$('.line-highlight', pre).forEach(function (line) {\n\t\t\tnum += line.textContent.length;\n\t\t\tline.parentNode.removeChild(line);\n\t\t});\n\t\t// Remove extra whitespace\n\t\tif (num && /^( \\n)+$/.test(env.code.slice(-num))) {\n\t\t\tenv.code = env.code.slice(0, -num);\n\t\t}\n\t});\n\n\tPrism.hooks.add('complete', function completeHook(env) {\n\t\tvar pre = env.element.parentElement;\n\t\tvar lines = pre && pre.getAttribute('data-line');\n\n\t\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(fakeTimer);\n\n\t\tvar hasLineNumbers = Prism.plugins.lineNumbers;\n\t\tvar isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers;\n\n\t\tif (hasClass(pre, 'line-numbers') && hasLineNumbers && !isLineNumbersLoaded) {\n\t\t\tPrism.hooks.add('line-numbers', completeHook);\n\t\t} else {\n\t\t\tvar mutateDom = highlightLines(pre, lines);\n\t\t\tmutateDom();\n\t\t\tfakeTimer = setTimeout(applyHash, 1);\n\t\t}\n\t});\n\n\twindow.addEventListener('hashchange', applyHash);\n\twindow.addEventListener('resize', function () {\n\t\tvar actions = $$('pre[data-line]').map(function (pre) {\n\t\t\treturn highlightLines(pre);\n\t\t});\n\t\tactions.forEach(callFunction);\n\t});\n\n})();\n\n(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t * @type {String}\n\t */\n\tvar PLUGIN_NAME = 'line-numbers';\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n\n\t/**\n\t * Global exports\n\t */\n\tvar config = Prism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t * @param {Element} element pre element\n\t\t * @param {Number} number line number\n\t\t * @return {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\t\tif (!lineNumberRows) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart;\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd;\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart;\n\n\t\t\treturn lineNumberRows.children[lineIndex];\n\t\t},\n\n\t\t/**\n\t\t * Resizes the line numbers of the given element.\n\t\t *\n\t\t * This function will not add line numbers. It will only resize existing ones.\n\t\t * @param {HTMLElement} element A `<pre>` element with line numbers.\n\t\t * @returns {void}\n\t\t */\n\t\tresize: function (element) {\n\t\t\tresizeElements([element]);\n\t\t},\n\n\t\t/**\n\t\t * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n\t\t * the current viewport.\n\t\t *\n\t\t * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n\t\t *\n\t\t * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tassumeViewportIndependence: true\n\t};\n\n\t/**\n\t * Resizes the given elements.\n\t *\n\t * @param {HTMLElement[]} elements\n\t */\n\tfunction resizeElements(elements) {\n\t\telements = elements.filter(function (e) {\n\t\t\tvar codeStyles = getStyles(e);\n\t\t\tvar whiteSpace = codeStyles['white-space'];\n\t\t\treturn whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n\t\t});\n\n\t\tif (elements.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar infos = elements.map(function (element) {\n\t\t\tvar codeElement = element.querySelector('code');\n\t\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\t\tif (!codeElement || !lineNumbersWrapper) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\t\tif (!lineNumberSizer) {\n\t\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t\t}\n\n\t\t\tlineNumberSizer.innerHTML = '0';\n\t\t\tlineNumberSizer.style.display = 'block';\n\n\t\t\tvar oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\treturn {\n\t\t\t\telement: element,\n\t\t\t\tlines: codeLines,\n\t\t\t\tlineHeights: [],\n\t\t\t\toneLinerHeight: oneLinerHeight,\n\t\t\t\tsizer: lineNumberSizer,\n\t\t\t};\n\t\t}).filter(Boolean);\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lines = info.lines;\n\t\t\tvar lineHeights = info.lineHeights;\n\t\t\tvar oneLinerHeight = info.oneLinerHeight;\n\n\t\t\tlineHeights[lines.length - 1] = undefined;\n\t\t\tlines.forEach(function (line, index) {\n\t\t\t\tif (line && line.length > 1) {\n\t\t\t\t\tvar e = lineNumberSizer.appendChild(document.createElement('span'));\n\t\t\t\t\te.style.display = 'block';\n\t\t\t\t\te.textContent = line;\n\t\t\t\t} else {\n\t\t\t\t\tlineHeights[index] = oneLinerHeight;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lineHeights = info.lineHeights;\n\n\t\t\tvar childIndex = 0;\n\t\t\tfor (var i = 0; i < lineHeights.length; i++) {\n\t\t\t\tif (lineHeights[i] === undefined) {\n\t\t\t\t\tlineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar wrapper = info.element.querySelector('.line-numbers-rows');\n\n\t\t\tlineNumberSizer.style.display = 'none';\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\tinfo.lineHeights.forEach(function (height, lineNumber) {\n\t\t\t\twrapper.children[lineNumber].style.height = height + 'px';\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns style declarations for the element\n\t * @param {Element} element\n\t */\n\tvar getStyles = function (element) {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n\t};\n\n\tvar lastWidth = undefined;\n\twindow.addEventListener('resize', function () {\n\t\tif (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n\t\t\treturn;\n\t\t}\n\t\tlastWidth = window.innerWidth;\n\n\t\tresizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!env.code) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar code = /** @type {Element} */ (env.element);\n\t\tvar pre = /** @type {HTMLElement} */ (code.parentNode);\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector('.line-numbers-rows')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!Prism.util.isActive(code, PLUGIN_NAME)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.classList.remove(PLUGIN_NAME);\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tpre.classList.add(PLUGIN_NAME);\n\n\t\tvar match = env.code.match(NEW_LINE_EXP);\n\t\tvar linesNum = match ? match.length + 1 : 1;\n\t\tvar lineNumbersWrapper;\n\n\t\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\t\tlineNumbersWrapper = document.createElement('span');\n\t\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\t\tlineNumbersWrapper.className = 'line-numbers-rows';\n\t\tlineNumbersWrapper.innerHTML = lines;\n\n\t\tif (pre.hasAttribute('data-start')) {\n\t\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper);\n\n\t\tresizeElements([pre]);\n\n\t\tPrism.hooks.run('line-numbers', env);\n\t});\n\n\tPrism.hooks.add('line-numbers', function (env) {\n\t\tenv.plugins = env.plugins || {};\n\t\tenv.plugins.lineNumbers = true;\n\t});\n\n}());\n\n(function(){\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tvar callbacks = [];\n\tvar map = {};\n\tvar noop = function() {};\n\n\tPrism.plugins.toolbar = {};\n\n\t/**\n\t * @typedef ButtonOptions\n\t * @property {string} text The text displayed.\n\t * @property {string} [url] The URL of the link which will be created.\n\t * @property {Function} [onClick] The event listener for the `click` event of the created button.\n\t * @property {string} [className] The class attribute to include with element.\n\t */\n\n\t/**\n\t * Register a button callback with the toolbar.\n\t *\n\t * @param {string} key\n\t * @param {ButtonOptions|Function} opts\n\t */\n\tvar registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n\t\tvar callback;\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t} else {\n\t\t\tcallback = function (env) {\n\t\t\t\tvar element;\n\n\t\t\t\tif (typeof opts.onClick === 'function') {\n\t\t\t\t\telement = document.createElement('button');\n\t\t\t\t\telement.type = 'button';\n\t\t\t\t\telement.addEventListener('click', function () {\n\t\t\t\t\t\topts.onClick.call(this, env);\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof opts.url === 'string') {\n\t\t\t\t\telement = document.createElement('a');\n\t\t\t\t\telement.href = opts.url;\n\t\t\t\t} else {\n\t\t\t\t\telement = document.createElement('span');\n\t\t\t\t}\n\n\t\t\t\tif (opts.className) {\n\t\t\t\t\telement.classList.add(opts.className);\n\t\t\t\t}\n\n\t\t\t\telement.textContent = opts.text;\n\n\t\t\t\treturn element;\n\t\t\t};\n\t\t}\n\n\t\tif (key in map) {\n\t\t\tconsole.warn('There is a button with the key \"' + key + '\" registered already.');\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(map[key] = callback);\n\t};\n\n\t/**\n\t * Returns the callback order of the given element.\n\t *\n\t * @param {HTMLElement} element\n\t * @returns {string[] | undefined}\n\t */\n\tfunction getOrder(element) {\n\t\twhile (element) {\n\t\t\tvar order = element.getAttribute('data-toolbar-order');\n\t\t\tif (order != null) {\n\t\t\t\torder = order.trim();\n\t\t\t\tif (order.length) {\n\t\t\t\t\treturn order.split(/\\s*,\\s*/g);\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Post-highlight Prism hook callback.\n\t *\n\t * @param env\n\t */\n\tvar hook = Prism.plugins.toolbar.hook = function (env) {\n\t\t// Check if inline or actual code block (credit to line-numbers plugin)\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Autoloader rehighlights, so only do this once.\n\t\tif (pre.parentNode.classList.contains('code-toolbar')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create wrapper for <pre> to prevent scrolling toolbar with content\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.classList.add('code-toolbar');\n\t\tpre.parentNode.insertBefore(wrapper, pre);\n\t\twrapper.appendChild(pre);\n\n\t\t// Setup the toolbar\n\t\tvar toolbar = document.createElement('div');\n\t\ttoolbar.classList.add('toolbar');\n\n\t\t// order callbacks\n\t\tvar elementCallbacks = callbacks;\n\t\tvar order = getOrder(env.element);\n\t\tif (order) {\n\t\t\telementCallbacks = order.map(function (key) {\n\t\t\t\treturn map[key] || noop;\n\t\t\t});\n\t\t}\n\n\t\telementCallbacks.forEach(function(callback) {\n\t\t\tvar element = callback(env);\n\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = document.createElement('div');\n\t\t\titem.classList.add('toolbar-item');\n\n\t\t\titem.appendChild(element);\n\t\t\ttoolbar.appendChild(item);\n\t\t});\n\n\t\t// Add our toolbar to the currently created wrapper of <pre> tag\n\t\twrapper.appendChild(toolbar);\n\t};\n\n\tregisterButton('label', function(env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-label')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element, template;\n\t\tvar text = pre.getAttribute('data-label');\n\t\ttry {\n\t\t\t// Any normal text will blow up this selector.\n\t\t\ttemplate = document.querySelector('template#' + text);\n\t\t} catch (e) {}\n\n\t\tif (template) {\n\t\t\telement = template.content;\n\t\t} else {\n\t\t\tif (pre.hasAttribute('data-url')) {\n\t\t\t\telement = document.createElement('a');\n\t\t\t\telement.href = pre.getAttribute('data-url');\n\t\t\t} else {\n\t\t\t\telement = document.createElement('span');\n\t\t\t}\n\n\t\t\telement.textContent = text;\n\t\t}\n\n\t\treturn element;\n\t});\n\n\t/**\n\t * Register the toolbar with Prism.\n\t */\n\tPrism.hooks.add('complete', hook);\n})();\n\n(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Show Languages plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\t// The languages map is built automatically with gulp\n\tvar Languages = /*languages_placeholder[*/{\n\t\t\"none\": \"Plain text\",\n\t\t\"html\": \"HTML\",\n\t\t\"xml\": \"XML\",\n\t\t\"svg\": \"SVG\",\n\t\t\"mathml\": \"MathML\",\n\t\t\"ssml\": \"SSML\",\n\t\t\"rss\": \"RSS\",\n\t\t\"css\": \"CSS\",\n\t\t\"clike\": \"C-like\",\n\t\t\"js\": \"JavaScript\",\n\t\t\"abap\": \"ABAP\",\n\t\t\"abnf\": \"ABNF\",\n\t\t\"al\": \"AL\",\n\t\t\"antlr4\": \"ANTLR4\",\n\t\t\"g4\": \"ANTLR4\",\n\t\t\"apacheconf\": \"Apache Configuration\",\n\t\t\"apl\": \"APL\",\n\t\t\"aql\": \"AQL\",\n\t\t\"arff\": \"ARFF\",\n\t\t\"asciidoc\": \"AsciiDoc\",\n\t\t\"adoc\": \"AsciiDoc\",\n\t\t\"aspnet\": \"ASP.NET (C#)\",\n\t\t\"asm6502\": \"6502 Assembly\",\n\t\t\"autohotkey\": \"AutoHotkey\",\n\t\t\"autoit\": \"AutoIt\",\n\t\t\"basic\": \"BASIC\",\n\t\t\"bbcode\": \"BBcode\",\n\t\t\"bnf\": \"BNF\",\n\t\t\"rbnf\": \"RBNF\",\n\t\t\"bsl\": \"BSL (1C:Enterprise)\",\n\t\t\"oscript\": \"OneScript\",\n\t\t\"csharp\": \"C#\",\n\t\t\"cs\": \"C#\",\n\t\t\"dotnet\": \"C#\",\n\t\t\"cpp\": \"C++\",\n\t\t\"cil\": \"CIL\",\n\t\t\"cmake\": \"CMake\",\n\t\t\"coffee\": \"CoffeeScript\",\n\t\t\"conc\": \"Concurnas\",\n\t\t\"csp\": \"Content-Security-Policy\",\n\t\t\"css-extras\": \"CSS Extras\",\n\t\t\"dataweave\": \"DataWeave\",\n\t\t\"dax\": \"DAX\",\n\t\t\"django\": \"Django/Jinja2\",\n\t\t\"jinja2\": \"Django/Jinja2\",\n\t\t\"dns-zone-file\": \"DNS zone file\",\n\t\t\"dns-zone\": \"DNS zone file\",\n\t\t\"dockerfile\": \"Docker\",\n\t\t\"dot\": \"DOT (Graphviz)\",\n\t\t\"gv\": \"DOT (Graphviz)\",\n\t\t\"ebnf\": \"EBNF\",\n\t\t\"editorconfig\": \"EditorConfig\",\n\t\t\"ejs\": \"EJS\",\n\t\t\"etlua\": \"Embedded Lua templating\",\n\t\t\"erb\": \"ERB\",\n\t\t\"excel-formula\": \"Excel Formula\",\n\t\t\"xlsx\": \"Excel Formula\",\n\t\t\"xls\": \"Excel Formula\",\n\t\t\"fsharp\": \"F#\",\n\t\t\"firestore-security-rules\": \"Firestore security rules\",\n\t\t\"ftl\": \"FreeMarker Template Language\",\n\t\t\"gml\": \"GameMaker Language\",\n\t\t\"gamemakerlanguage\": \"GameMaker Language\",\n\t\t\"gcode\": \"G-code\",\n\t\t\"gdscript\": \"GDScript\",\n\t\t\"gedcom\": \"GEDCOM\",\n\t\t\"glsl\": \"GLSL\",\n\t\t\"graphql\": \"GraphQL\",\n\t\t\"hs\": \"Haskell\",\n\t\t\"hcl\": \"HCL\",\n\t\t\"hlsl\": \"HLSL\",\n\t\t\"http\": \"HTTP\",\n\t\t\"hpkp\": \"HTTP Public-Key-Pins\",\n\t\t\"hsts\": \"HTTP Strict-Transport-Security\",\n\t\t\"ichigojam\": \"IchigoJam\",\n\t\t\"ignore\": \".ignore\",\n\t\t\"gitignore\": \".gitignore\",\n\t\t\"hgignore\": \".hgignore\",\n\t\t\"npmignore\": \".npmignore\",\n\t\t\"inform7\": \"Inform 7\",\n\t\t\"javadoc\": \"JavaDoc\",\n\t\t\"javadoclike\": \"JavaDoc-like\",\n\t\t\"javastacktrace\": \"Java stack trace\",\n\t\t\"jq\": \"JQ\",\n\t\t\"jsdoc\": \"JSDoc\",\n\t\t\"js-extras\": \"JS Extras\",\n\t\t\"json\": \"JSON\",\n\t\t\"webmanifest\": \"Web App Manifest\",\n\t\t\"json5\": \"JSON5\",\n\t\t\"jsonp\": \"JSONP\",\n\t\t\"jsstacktrace\": \"JS stack trace\",\n\t\t\"js-templates\": \"JS Templates\",\n\t\t\"kts\": \"Kotlin Script\",\n\t\t\"kt\": \"Kotlin\",\n\t\t\"latex\": \"LaTeX\",\n\t\t\"tex\": \"TeX\",\n\t\t\"context\": \"ConTeXt\",\n\t\t\"lilypond\": \"LilyPond\",\n\t\t\"ly\": \"LilyPond\",\n\t\t\"emacs\": \"Lisp\",\n\t\t\"elisp\": \"Lisp\",\n\t\t\"emacs-lisp\": \"Lisp\",\n\t\t\"llvm\": \"LLVM IR\",\n\t\t\"lolcode\": \"LOLCODE\",\n\t\t\"md\": \"Markdown\",\n\t\t\"markup-templating\": \"Markup templating\",\n\t\t\"matlab\": \"MATLAB\",\n\t\t\"mel\": \"MEL\",\n\t\t\"mongodb\": \"MongoDB\",\n\t\t\"moon\": \"MoonScript\",\n\t\t\"n1ql\": \"N1QL\",\n\t\t\"n4js\": \"N4JS\",\n\t\t\"n4jsd\": \"N4JS\",\n\t\t\"nand2tetris-hdl\": \"Nand To Tetris HDL\",\n\t\t\"naniscript\": \"Naninovel Script\",\n\t\t\"nani\": \"Naninovel Script\",\n\t\t\"nasm\": \"NASM\",\n\t\t\"neon\": \"NEON\",\n\t\t\"nginx\": \"nginx\",\n\t\t\"nsis\": \"NSIS\",\n\t\t\"objectivec\": \"Objective-C\",\n\t\t\"objc\": \"Objective-C\",\n\t\t\"ocaml\": \"OCaml\",\n\t\t\"opencl\": \"OpenCL\",\n\t\t\"parigp\": \"PARI/GP\",\n\t\t\"objectpascal\": \"Object Pascal\",\n\t\t\"pcaxis\": \"PC-Axis\",\n\t\t\"px\": \"PC-Axis\",\n\t\t\"peoplecode\": \"PeopleCode\",\n\t\t\"pcode\": \"PeopleCode\",\n\t\t\"php\": \"PHP\",\n\t\t\"phpdoc\": \"PHPDoc\",\n\t\t\"php-extras\": \"PHP Extras\",\n\t\t\"plsql\": \"PL/SQL\",\n\t\t\"powerquery\": \"PowerQuery\",\n\t\t\"pq\": \"PowerQuery\",\n\t\t\"mscript\": \"PowerQuery\",\n\t\t\"powershell\": \"PowerShell\",\n\t\t\"promql\": \"PromQL\",\n\t\t\"properties\": \".properties\",\n\t\t\"protobuf\": \"Protocol Buffers\",\n\t\t\"purebasic\": \"PureBasic\",\n\t\t\"pbfasm\": \"PureBasic\",\n\t\t\"purs\": \"PureScript\",\n\t\t\"py\": \"Python\",\n\t\t\"q\": \"Q (kdb+ database)\",\n\t\t\"qml\": \"QML\",\n\t\t\"rkt\": \"Racket\",\n\t\t\"jsx\": \"React JSX\",\n\t\t\"tsx\": \"React TSX\",\n\t\t\"renpy\": \"Ren'py\",\n\t\t\"rpy\": \"Ren'py\",\n\t\t\"rest\": \"reST (reStructuredText)\",\n\t\t\"robotframework\": \"Robot Framework\",\n\t\t\"robot\": \"Robot Framework\",\n\t\t\"rb\": \"Ruby\",\n\t\t\"sas\": \"SAS\",\n\t\t\"sass\": \"Sass (Sass)\",\n\t\t\"scss\": \"Sass (Scss)\",\n\t\t\"shell-session\": \"Shell session\",\n\t\t\"sh-session\": \"Shell session\",\n\t\t\"shellsession\": \"Shell session\",\n\t\t\"sml\": \"SML\",\n\t\t\"smlnj\": \"SML/NJ\",\n\t\t\"solidity\": \"Solidity (Ethereum)\",\n\t\t\"sol\": \"Solidity (Ethereum)\",\n\t\t\"solution-file\": \"Solution file\",\n\t\t\"sln\": \"Solution file\",\n\t\t\"soy\": \"Soy (Closure Template)\",\n\t\t\"sparql\": \"SPARQL\",\n\t\t\"rq\": \"SPARQL\",\n\t\t\"splunk-spl\": \"Splunk SPL\",\n\t\t\"sqf\": \"SQF: Status Quo Function (Arma 3)\",\n\t\t\"sql\": \"SQL\",\n\t\t\"iecst\": \"Structured Text (IEC 61131-3)\",\n\t\t\"t4-templating\": \"T4 templating\",\n\t\t\"t4-cs\": \"T4 Text Templates (C#)\",\n\t\t\"t4\": \"T4 Text Templates (C#)\",\n\t\t\"t4-vb\": \"T4 Text Templates (VB)\",\n\t\t\"tap\": \"TAP\",\n\t\t\"tt2\": \"Template Toolkit 2\",\n\t\t\"toml\": \"TOML\",\n\t\t\"trig\": \"TriG\",\n\t\t\"ts\": \"TypeScript\",\n\t\t\"tsconfig\": \"TSConfig\",\n\t\t\"uscript\": \"UnrealScript\",\n\t\t\"uc\": \"UnrealScript\",\n\t\t\"vbnet\": \"VB.Net\",\n\t\t\"vhdl\": \"VHDL\",\n\t\t\"vim\": \"vim\",\n\t\t\"visual-basic\": \"Visual Basic\",\n\t\t\"vba\": \"VBA\",\n\t\t\"vb\": \"Visual Basic\",\n\t\t\"wasm\": \"WebAssembly\",\n\t\t\"wiki\": \"Wiki markup\",\n\t\t\"xeoracube\": \"XeoraCube\",\n\t\t\"xml-doc\": \"XML doc (.net)\",\n\t\t\"xojo\": \"Xojo (REALbasic)\",\n\t\t\"xquery\": \"XQuery\",\n\t\t\"yaml\": \"YAML\",\n\t\t\"yml\": \"YAML\",\n\t\t\"yang\": \"YANG\"\n\t}/*]*/;\n\n\tPrism.plugins.toolbar.registerButton('show-language', function (env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Tries to guess the name of a language given its id.\n\t\t *\n\t\t * @param {string} id The language id.\n\t\t * @returns {string}\n\t\t */\n\t\tfunction guessTitle(id) {\n\t\t\tif (!id) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t\treturn (id.substring(0, 1).toUpperCase() + id.substring(1)).replace(/s(?=cript)/, 'S');\n\t\t}\n\n\t\tvar language = pre.getAttribute('data-language') || Languages[env.language] || guessTitle(env.language);\n\n\t\tif (!language) {\n\t\t\treturn;\n\t\t}\n\t\tvar element = document.createElement('span');\n\t\telement.textContent = language;\n\n\t\treturn element;\n\t});\n\n})();\n\n(function(){\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\tvar ClipboardJS = window.ClipboardJS || undefined;\n\n\tif (!ClipboardJS && typeof require === 'function') {\n\t\tClipboardJS = require('clipboard');\n\t}\n\n\tvar callbacks = [];\n\n\tif (!ClipboardJS) {\n\t\tvar script = document.createElement('script');\n\t\tvar head = document.querySelector('head');\n\n\t\tscript.onload = function() {\n\t\t\tClipboardJS = window.ClipboardJS;\n\n\t\t\tif (ClipboardJS) {\n\t\t\t\twhile (callbacks.length) {\n\t\t\t\t\tcallbacks.pop()();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js';\n\t\thead.appendChild(script);\n\t}\n\n\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n\t\tvar linkCopy = document.createElement('button');\n\t\tlinkCopy.textContent = 'Copy';\n\t\tlinkCopy.setAttribute('type', 'button');\n\n\t\tvar element = env.element;\n\n\t\tif (!ClipboardJS) {\n\t\t\tcallbacks.push(registerClipboard);\n\t\t} else {\n\t\t\tregisterClipboard();\n\t\t}\n\n\t\treturn linkCopy;\n\n\t\tfunction registerClipboard() {\n\t\t\tvar clip = new ClipboardJS(linkCopy, {\n\t\t\t\t'text': function () {\n\t\t\t\t\treturn element.textContent;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclip.on('success', function() {\n\t\t\t\tlinkCopy.textContent = 'Copied!';\n\n\t\t\t\tresetText();\n\t\t\t});\n\t\t\tclip.on('error', function () {\n\t\t\t\tlinkCopy.textContent = 'Press Ctrl+C to copy';\n\n\t\t\t\tresetText();\n\t\t\t});\n\t\t}\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlinkCopy.textContent = 'Copy';\n\t\t\t}, 5000);\n\t\t}\n\t});\n})();\n\n","/* eslint-env browser */\n\n/**\n * Nav/Title replacement\n * Used on invividual post pages, displays the post title in place of the nav\n * bar when scrolling past the title\n *\n * Usage:\n * ```\n * Casper.stickyTitle({\n *     navSelector: '.site-nav-main',\n *     titleSelector: '.post-full-title',\n *     activeClass: 'nav-post-title-active'\n * });\n * ```\n */\n\n(function (window, document) {\n    // set up Casper as a global object\n    if (!window.Casper) {\n        window.Casper = {};\n    }\n\n    window.Casper.stickyNavTitle = function stickyNavTitle(options) {\n        var nav = document.querySelector(options.navSelector);\n        var title = document.querySelector(options.titleSelector);\n\n        var lastScrollY = window.scrollY;\n        var ticking = false;\n\n        function onScroll() {\n            lastScrollY = window.scrollY;\n            requestTick();\n        }\n\n        function requestTick() {\n            if (!ticking) {\n                requestAnimationFrame(update);\n            }\n            ticking = true;\n        }\n\n        function update() {\n            var trigger = title.getBoundingClientRect().top + window.scrollY;\n            var triggerOffset = title.offsetHeight + 35;\n\n            // show/hide post title\n            if (lastScrollY >= trigger + triggerOffset) {\n                nav.classList.add(options.activeClass);\n            } else {\n                nav.classList.remove(options.activeClass);\n            }\n\n            ticking = false;\n        }\n\n        window.addEventListener('scroll', onScroll, {passive: true});\n\n        update();\n    };\n})(window, document);\n"]}